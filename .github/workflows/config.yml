name: UI Tests

on: [workflow_dispatch]

#push:
#    branches-ignore:
#      - '!master'

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        env:
          GIT_TRACE: 1
          GIT_CURL_VERBOSE: 1

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Check code style
        if: always()
        run: |
          python3 -m pip install --upgrade pip
          

  autotests:
    needs: linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Test
        if: always()
        run: python -m pytest --alluredir=allure-results
        continue-on-error: true

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history



#      - name: Run UI-tests via docker-compose
#        env:
#          LOGIN: ${{ secrets.LOGIN }}
#          PASSWORD: ${{ secrets.PASSWORD }}
#        run: |
#          docker-compose up --exit-code-from regression || true

#      - name: Generate Allure report
#        run: |
#          sudo docker-compose run regression /bin/sh -c "allure generate allure-results --clean -o allure-report"


      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.CI_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history