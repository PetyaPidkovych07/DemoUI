{"uid":"485f3652776c2f77","name":"test_vacancy_existed","fullName":"tests.features_profile_test.TestVacancies#test_vacancy_existed","historyId":"b12c9632d1ad387f82e194af1b379351","time":{"start":1712215003488,"stop":1712215027050,"duration":23562},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5596c5750993 <unknown>\n#1 0x5596c544b136 <unknown>\n#2 0x5596c5495d48 <unknown>\n#3 0x5596c5495e01 <unknown>\n#4 0x5596c54d8e44 <unknown>\n#5 0x5596c54b7cfd <unknown>\n#6 0x5596c54d6319 <unknown>\n#7 0x5596c54b7a73 <unknown>\n#8 0x5596c5488c93 <unknown>\n#9 0x5596c548965e <unknown>\n#10 0x5596c571508b <unknown>\n#11 0x5596c5719005 <unknown>\n#12 0x5596c5703491 <unknown>\n#13 0x5596c5719b92 <unknown>\n#14 0x5596c56e89ef <unknown>\n#15 0x5596c573fdf8 <unknown>\n#16 0x5596c573ffcb <unknown>\n#17 0x5596c574fae4 <unknown>\n#18 0x7fa032494ac3 <unknown>","statusTrace":"self = <tests.features_profile_test.TestVacancies object at 0x7f324553c170>\n\n    def test_vacancy_existed(self):\n        self.login_page.open()\n        self.login_page.enter_login()\n        self.login_page.enter_password()\n        self.login_page.click_on_submit_button()\n        self.vacancies_page.click_on_recruitment_item()\n        self.vacancies_page.click_on_vacancies_item()\n        self.vacancies_page.click_on_add_btn()\n        self.vacancies_page.type_petro_in_the_field()\n>       self.vacancies_page.is_already_existed_position()\n\ntests/features_profile_test.py:333: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/vacancies_page.py:95: in is_already_existed_position\n    text_already = self.wait.until(EC.visibility_of_element_located(self.ERROR_ALREADY_EXISTS)).text\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a2d85c122a5ccd6d7e1ddc35857653fb\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f3245440b80>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5596c5750993 <unknown>\nE       #1 0x5596c544b136 <unknown>\nE       #2 0x5596c5495d48 <unknown>\nE       #3 0x5596c5495e01 <unknown>\nE       #4 0x5596c54d8e44 <unknown>\nE       #5 0x5596c54b7cfd <unknown>\nE       #6 0x5596c54d6319 <unknown>\nE       #7 0x5596c54b7a73 <unknown>\nE       #8 0x5596c5488c93 <unknown>\nE       #9 0x5596c548965e <unknown>\nE       #10 0x5596c571508b <unknown>\nE       #11 0x5596c5719005 <unknown>\nE       #12 0x5596c5703491 <unknown>\nE       #13 0x5596c5719b92 <unknown>\nE       #14 0x5596c56e89ef <unknown>\nE       #15 0x5596c573fdf8 <unknown>\nE       #16 0x5596c573ffcb <unknown>\nE       #17 0x5596c574fae4 <unknown>\nE       #18 0x7fa032494ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.12.2/x64/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1712215003200,"stop":1712215003487,"duration":287},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1712215003488,"stop":1712215003488,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"driver::0","time":{"start":1712215027346,"stop":1712215027346,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"features_profile_test"},{"name":"subSuite","value":"TestVacancies"},{"name":"host","value":"fv-az651-360"},{"name":"thread","value":"2328-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.features_profile_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"1742881b709397f3","reportUrl":"https://PetyaPidkovych07.github.io/DemoUI/47//#testresult/1742881b709397f3","status":"passed","time":{"start":1711615903066,"stop":1711615913307,"duration":10241}}]},"tags":[]},"source":"485f3652776c2f77.json","parameterValues":[]}